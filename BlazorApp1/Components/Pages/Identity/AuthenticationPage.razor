@page "/"
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
    private AuthenticationState _authenticationState;

    protected override async Task OnInitializedAsync()
    {
        _authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        // Verifica si el usuario está autenticado
        if (_authenticationState.User.Identity?.IsAuthenticated == true)
        {
            // Comprobamos si la página anterior fue app/home
            var referrer = NavManager.Uri;
            if (referrer.Contains("app/home"))
            {
                // Si veníamos de app/home, no hacemos nada
                return;
            }

            // Si no veníamos de app/home, redirigimos a app/home
            NavManager.NavigateTo("app/home", forceLoad: false);
        }
        else
        {
            // Si no está autenticado, redirige a la página de login
            NavManager.NavigateTo("Account/login", forceLoad: true);
        }
    }
}



@* @page "/"

@code {
	[CascadingParameter]
	public Task <AuthenticationState>? ClientAuthState { get; set; }

	protected override async Task OnInitializedAsync()
	{
		try
		{
			await accountService.SetUpAsync();
			if ((await ClientAuthState!).User.Identity!.IsAuthenticated == true)
				NavManager.NavigateTo("app/home", false, true);
			else
				NavManager.NavigateTo("Account/login", false,true);
		}
		catch
		{
			NavManager.NavigateTo("Account/login", false, true);
		}
	}

}
 *@
